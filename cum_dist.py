amharic_grid = {
   
    "ሀ": (1, 1), "ሁ": (1, 2), "ሂ": (1, 3), "ሃ": (1, 4), "ሄ": (1, 5),
    "ህ": (1, 6), "ሆ": (1, 7), 
    "ለ": (2, 1), "ሉ": (2, 2), "ሊ": (2, 3), "ላ": (2, 4), "ሌ": (2, 5), 
    "ል": (2, 6), "ሎ": (2, 7), 
    "ሐ": (3, 1), "ሑ": (3, 2), "ሒ": (3, 3), "ሓ": (3, 4), "ሔ": (3, 5), 
    "ሕ": (3, 6), "ሖ": (3, 7), 
    "መ": (4, 1), "ሙ": (4, 2), "ሚ": (4, 3), "ማ": (4, 4), "ሜ": (4, 5), 
    "ም": (4, 6), "ሞ": (4, 7), 
    "ሠ": (5, 1), "ሡ": (5, 2), "ሢ": (5, 3), "ሣ": (5, 4), "ሤ": (5, 5), 
    "ሥ": (5, 6), "ሦ": (5, 7), 
    "ረ": (6, 1), "ሩ": (6, 2), "ሪ": (6, 3), "ራ": (6, 4), "ሬ": (6, 5), 
    "ር": (6, 6), "ሮ": (6, 7), 
    "ሰ": (7, 1), "ሱ": (7, 2), "ሲ": (7, 3), "ሳ": (7, 4), "ሴ": (7, 5), 
    "ስ": (7, 6), "ሶ": (7, 7), 
    "ሸ": (8, 1), "ሹ": (8, 2), "ሺ": (8, 3), "ሻ": (8, 4), "ሼ": (8, 5), 
    "ሽ": (8, 6), "ሾ": (8, 7), 
    "ቀ": (9, 1), "ቁ": (9, 2), "ቂ": (9, 3), "ቃ": (9, 4), "ቄ": (9, 5), 
    "ቅ": (9, 6), "ቆ": (9, 7), 
    "በ": (10, 1), "ቡ": (10, 2), "ቢ": (10, 3), "ባ": (10, 4), "ቤ": (10, 5), 
    "ብ": (10, 6), "ቦ": (10, 7), 
    "ተ": (11, 1), "ቱ": (11, 2), "ቲ": (11, 3), "ታ": (11, 4), "ቴ": (11, 5), 
    "ት": (11, 6), "ቶ": (11, 7), 
    "ቸ": (12, 1), "ቹ": (12, 2), "ቺ": (12, 3), "ቻ": (12, 4), "ቼ": (12, 5), 
    "ች": (12, 6), "ቾ": (12, 7), 
    "ኀ": (13, 1), "ኁ": (13, 2), "ኂ": (13, 3), "ኃ": (13, 4), "ኄ": (13, 5), 
    "ኅ": (13, 6), "ኆ": (13, 7), 
    "ነ": (14, 1), "ኑ": (14, 2), "ኒ": (14, 3), "ና": (14, 4), "ኔ": (14, 5), 
    "ን": (14, 6), "ኖ": (14, 7), 
    "ኘ": (15, 1), "ኙ": (15, 2), "ኚ": (15, 3), "ኛ": (15, 4), "ኜ": (15, 5), 
    "ኝ": (15, 6), "ኞ": (15, 7), 
    "አ": (16, 1), "ኡ": (16, 2), "ኢ": (16, 3), "ኣ": (16, 4), "ኤ": (16, 5), 
    "እ": (16, 6), "ኦ": (16, 7), 
    "ከ": (17, 1), "ኩ": (17, 2), "ኪ": (17, 3), "ካ": (17, 4), "ኬ": (17, 5), 
    "ክ": (17, 6), "ኮ": (17, 7), 
    "ኸ": (18, 1), "ኹ": (18, 2), "ኺ": (18, 3), "ኻ": (18, 4), "ኼ": (18, 5), 
    "ኽ": (18, 6), "ኾ": (18, 7), 
    "ወ": (19, 1), "ዉ": (19, 2), "ዊ": (19, 3), "ዋ": (19, 4), "ዌ": (19, 5), 
    "ው": (19, 6), "ዎ": (19, 7), 
    "ዐ": (20, 1), "ዑ": (20, 2), "ዒ": (20, 3), "ዓ": (20, 4), "ዔ": (20, 5), 
    "ዕ": (20, 6), "ዖ": (20, 7), 
    "ዘ": (21, 1), "ዙ": (21, 2), "ዚ": (21, 3), "ዛ": (21, 4), "ዜ": (21, 5), 
    "ዝ": (21, 6), "ዞ": (21, 7), 
    "ዠ": (22, 1), "ዡ": (22, 2), "ዢ": (22, 3), "ዣ": (22, 4), "ዤ": (22, 5), 
    "ዥ": (22, 6), "ዦ": (22, 7), 
    "የ": (23, 1), "ዩ": (23, 2), "ዪ": (23, 3), "ያ": (23, 4), "ዬ": (23, 5), 
    "ይ": (23, 6), "ዮ": (23, 7), 
    "ደ": (24, 1), "ዱ": (24, 2), "ዲ": (24, 3), "ዳ": (24, 4), "ዴ": (24, 5), 
    "ድ": (24, 6), "ዶ": (24, 7), 
    "ጀ": (25, 1), "ጁ": (25, 2), "ጂ": (25, 3), "ጃ": (25, 4), "ጄ": (25, 5), 
    "ጅ": (25, 6), "ጆ": (25, 7), 
    "ገ": (26, 1), "ጉ": (26, 2), "ጊ": (26, 3), "ጋ": (26, 4), "ጌ": (26, 5), 
    "ግ": (26, 6), "ጎ": (26, 7), 
    "ጠ": (27, 1), "ጡ": (27, 2), "ጢ": (27, 3), "ጣ": (27, 4), "ጤ": (27, 5), 
    "ጥ": (27, 6), "ጦ": (27, 7), 
    "ጨ": (28, 1), "ጩ": (28, 2), "ጪ": (28, 3), "ጫ": (28, 4), "ጬ": (28, 5), 
    "ጭ": (28, 6), "ጮ": (28, 7), 
    "ጰ": (29, 1), "ጱ": (29, 2), "ጲ": (29, 3), "ጳ": (29, 4), "ጴ": (29, 5), 
    "ጵ": (29, 6), "ጶ": (29, 7), 
    "ጸ": (30, 1), "ጹ": (30, 2), "ጺ": (30, 3), "ጻ": (30, 4), "ጼ": (30, 5), 
    "ጽ": (30, 6), "ጾ": (30, 7), 
    "ፀ": (31, 1), "ፁ": (31, 2), "ፂ": (31, 3), "ፃ": (31, 4), "ፄ": (31, 5), 
    "ፅ": (31, 6), "ፆ": (31, 7), 
    "ፈ": (32, 1), "ፉ": (32, 2), "ፊ": (32, 3), "ፋ": (32, 4), "ፌ": (32, 5), 
    "ፍ": (32, 6), "ፎ": (32, 7),
    "ፐ": (33, 1), "ፑ": (33, 2), "ፒ": (33, 3), "ፓ": (33, 4), "ፔ": (33, 5), 
    "ፕ": (33, 6), "ፖ": (33, 7), 
    "ቨ": (34, 1), "ቩ": (34, 2), "ቪ": (34, 3), "ቫ": (34, 4), "ቬ": (34, 5), 
    "ቭ": (34, 6), "ቮ": (34, 7)
}

# Step 2: Function to calculate Manhattan Distance between two characters
def manhattan_distance(char1, char2):
    row1, col1 = amharic_grid[char1]
    row2, col2 = amharic_grid[char2]
    return abs(row1 - row2) + abs(col1 - col2)

# Step 3: Function to calculate cumulative average Manhattan distance for a word
def average_manhattan_distance(word):
    total_distance = 0
    num_pairs = 0
    for i in range(len(word)):
        for j in range(i + 1, len(word)):  # Only consider pairs (i, j) where i < j
            total_distance += manhattan_distance(word[i], word[j])
            num_pairs += 1
    # Return the average distance
    return total_distance / num_pairs if num_pairs > 0 else 0

# Step 4: Sort words based on cumulative average Manhattan distance
def sort_words_by_distance(words):
    word_distances = [(word, average_manhattan_distance(word)) for word in words]
    sorted_words = sorted(word_distances, key=lambda x: x[1])
    return [word for word, _ in sorted_words]

# Step 5: Input words, calculate distances, and print in order
words = ["ዤል","ለሊሴ","ቦንቱ","ፎዝያ"]  # Replace with input if desired
sorted_words = sort_words_by_distance(words)
print("Sorted words by cumulative average Manhattan distance:")
for word in sorted_words:
    print(word)
